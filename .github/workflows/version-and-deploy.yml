name: CI Pipeline

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    container:
      image: python:3.9
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Flake8
        run: pip3 install flake8

      - name: Run Linter
        run: make lint

  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: python:3.9
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: pip3 install -r requirements.txt

      - name: Run Tests
        run: make tests

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    container:
      image: python:3.9
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Security Scan
        run: echo "Running security scan..."
        # You can integrate Snyk or Bandit later
        # run: |
        #   pip3 install bandit
        #   bandit -r .
  increment-version:
    #needs: detect-changes
    if: needs.detect-changes.outputs.non_experiment_changed == 'true'
    name: Create SemVer Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout merged commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: 0
          lfs: true
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "noreply@github.com"
      - name: Make semver script executable
        run: chmod +x semver.sh
      - name: Create and push version tag
        run: |
          git fetch --tags --force --prune
          ./semver.sh
      - name: Get the new tag
        id: get_tag
        run: |
          NEW_TAG=$(git describe --tags --abbrev=0)
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New tag created: $NEW_TAG"
    outputs:
      version: ${{ steps.get_tag.outputs.new_tag }}



          


